openapi: 3.0.0
info:
  title: Servers API
  description: API from creating and managing servers
  version: "1.0.0"
tags:
  - name: Server
    description: Server management
paths:
  /server:
    get:
      tags:
        - Server
      summary: Get all servers
      responses:
        "200":
          description: A list of servers
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GerServer'
    put:
      tags:
        - Server
      summary: Update server by grid name
      parameters:
        - name: gridname
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServer'
      responses:
        "200":
          description: Server updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                  status:
                    type: string
                  path:
                    type: string
    post:
      tags:
        - Server
      summary: Create a new server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServer'
      responses:
        "201":
          description: Server created
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: Server created
                  status:
                    type: string
                    example: success
                  path:
                    type: string
                    example: C:/home/username/server
                  pvtoPath:
                    type: string
                    example: C:/home/username/server/pvto

  /server/{gridName}:
    get:
      tags:
        - Server
      summary: Get server by grid name
      parameters:
        - name: gridName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Server details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GerServer'
    delete:
      tags:
        - Server
      summary: Delete server by grid name
      parameters:
        - name: gridName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Server deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Server deleted

  /server/files/{gridName}:
    get:
      tags:
        - Server
      summary: Get server files by grid name
      parameters:
        - name: gridName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Server file
          content:
            application/json:
              schema:
                type: object
                properties:
                  directory:
                    type: object

  /server/file:
    post:
      tags:
        - Server
      summary: Get specific file from server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerFindFile'
      responses:
        "201":
          description: File uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string

components:
  schemas:
    CreateServer:
      type: object
      required:
       - port
       - gridName
       - dataBaseName
      properties:
        port:
          type: number
          example: 9000
        gridName:
          type: string
          example: "testServer"
    GerServer:
      type: object
      properties:
        gridName:
          type: string
          example: "testServer"
        serverPath:
          type: string
          example: "C:/home/username/server"
        pvtoPath:
          type: string
          example: "C:/home/username/server/pvto"
    ServerFindFile:
      type: object
      required:
       - filename
       - content
      properties:
        gridname:
          type: string
        filename:
          type: string
